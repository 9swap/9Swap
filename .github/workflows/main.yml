name: Build

on: push

jobs:
  build-server-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        with:
          path: server
          repository: 9swap/9Swap-server
          ref: master
        uses: actions/checkout@v2

      - name: Clean
        run: chmod +x ./build_scripts/clean_linux.sh && ./build_scripts/clean_linux.sh
        working-directory: ${{ github.workspace }}/server

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Run linux.sh
        run: chmod +x ./build_scripts/linux.sh && ./build_scripts/linux.sh
        working-directory: ${{ github.workspace }}/server

      - name: Upload to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Linux-App
          path: ${{ github.workspace }}/server/dist/linux


  build-server-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        with:
          path: server
          repository: 9swap/9Swap-server
          ref: master
        uses: actions/checkout@v2

      - name: Clean
        run: .\build_scripts\clean_windows.bat
        working-directory: ${{ github.workspace }}/server

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Run windows.bat
        run: .\build_scripts\windows.bat
        working-directory: ${{ github.workspace }}/server

      - name: Upload to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Windows-App
          path: ${{ github.workspace }}/server/dist/windows


  build-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: client

      - name: Checkout Flutter
        uses: actions/checkout@v2
        with:
          path: flutter
          repository: flutter/flutter
          ref: master
          # Shallow clones don't work; see https://github.com/flutter/flutter/issues/18532
          fetch-depth: 0

      - name: Add Flutter tags
        # Add tags, which are also necessary for version checks to work.
        run: git fetch origin +refs/tags/*:refs/tags/*
        working-directory: ${{ github.workspace }}/flutter

      - name: Add Flutter to path
        run: echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH

      - name: Enable web support
        run: flutter config --enable-web

      - name: Build client
        run: |
          flutter create --platforms=web .
          flutter pub get
          flutter build web --release
        working-directory: ${{ github.workspace }}/client

      - name: Upload to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: html
          path: ${{ github.workspace }}/client/build/web


  make-linux-bundle:
    runs-on: ubuntu-latest
    needs: [ build-server-linux, build-ui ]
    steps:
      - name: Create directories
        run: |
          mkdir 9Swap-linux
          mkdir 9Swap-linux/html

      - name: Download UI
        uses: actions/download-artifact@v2
        with:
          name: html
          path: 9Swap-linux/html

      - name: Download Linux app
        uses: actions/download-artifact@v2
        with:
          name: Linux-App
          path: 9Swap-linux

      - name: Upload to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: 9Swap-linux
          path: ${{ github.workspace }}/9Swap-linux


  make-windows-bundle:
    runs-on: ubuntu-latest
    needs: [ build-server-windows, build-ui ]
    steps:
      - name: Create directories
        run: |
          mkdir 9Swap-windows
          mkdir 9Swap-windows/html

      - name: Download UI
        uses: actions/download-artifact@v2
        with:
          name: html
          path: 9Swap-windows/html

      - name: Download Windows app
        uses: actions/download-artifact@v2
        with:
          name: Windows-App
          path: 9Swap-windows/

      - name: Upload to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: 9Swap-windows
          path: ${{ github.workspace }}/9Swap-windows


  release:
    runs-on: ubuntu-latest
    if: startsWith( github.ref, 'refs/tags/v')
    needs: [ make-linux-bundle, make-windows-bundle ]
    steps:
      - name: Get release version
        id: release_version
        run: |
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Download Linux bundle
        uses: actions/download-artifact@v2
        with:
          name: 9Swap-linux
          path: 9Swap-linux

      - name: Zip Linux bundle
        run: zip -r 9Swap-linux.zip 9Swap-linux

      - name: Download Windows bundle
        uses: actions/download-artifact@v2
        with:
          name: 9Swap-windows
          path: 9Swap-windows

      - name: Zip Windows bundle
        run: zip -r 9Swap-windows.zip 9Swap-windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_version.outputs.TAG }}
          release_name: Release ${{ steps.release_version.outputs.TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Assets - Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./9Swap-windows.zip
          asset_name: 9Swap-windows.zip
          asset_content_type: application/zip

      - name: Upload Release Assets - Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./9Swap-linux.zip
          asset_name: 9Swap-linux.zip
          asset_content_type: application/zip
    